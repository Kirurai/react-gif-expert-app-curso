{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAwCeA,EArCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAmBvC,OACI,mCACI,sBAAMC,SAdO,SAAAC,GACdA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAAAS,GACV,MAAM,CAAGP,GAAT,mBAAwBO,QAS/B,SACI,uBACIC,KAAK,OACLC,MAAQT,EACRU,SArBU,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,QAqBXG,YAAY,qB,+BCTjBC,EAnBF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACG,mCACE,GACXC,EAHM,iDAG2CC,UAAUH,GAHrD,kBAEK,GAFL,oBACG,oCADH,SAKOI,MAAOF,GALd,cAKNG,EALM,gBAMWA,EAAKC,OANhB,uBAMJC,EANI,EAMJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZ9B,kBAgBLM,GAhBK,4CAAH,sDC4BEO,EA1BM,SAAAf,GAAa,IAAD,EACHf,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,IAHgB,mBACtBC,EADsB,KACfC,EADe,KAmB7B,OAbAC,qBAAU,WACNpB,EAAQC,GACHoB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAKc,EACLL,SAAS,SAMrB,CAAEhB,IAECiB,GCTIK,EAXK,SAAC,GAAmB,IAAjBV,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE1B,OACI,sBAAKqB,UAAU,yCAAf,UACI,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCkBDc,EArBC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAAc,EAEMe,EAAaf,GAAlCa,EAFe,EAEpBN,KAAcS,EAFM,EAENA,QAEtB,OACI,qCACI,oBAAIO,UAAU,oCAAd,SAAmDvB,IACjDgB,GAAW,mBAAGO,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SACKV,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADEA,EAAIC,aCgBpBgB,EA1BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ4C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCfjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6e632cbe.chunk.js","sourcesContent":["import React, { useState }from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const HandleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const HandleSubmit = e => {\r\n           e.preventDefault();\r\n\r\n           if (inputValue.trim().length > 2){\r\n               setCategories(cats => {\r\n                   return [ inputValue, ...cats ];\r\n               });\r\n\r\n           }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ HandleSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ HandleInputChange }\r\n                    placeholder='Ciao Mundo!'\r\n                />\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\nconst getGifs = async(category) => {\r\n    const apiKey = 'neifP4xqUpPUTrV91cwAtbSIPjdS401Q';\r\n    const limitImg = 10;\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=${limitImg}&api_key=${apiKey}`;\r\n\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    });\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import { useState, useEffect } from 'react'\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = category => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n\r\n                });\r\n\r\n            });\r\n\r\n     }, [ category ]);\r\n\r\n    return state;\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default useFetchGifs;","import React from 'react';\r\n\r\nconst GifGridItem = ({ title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__rollIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GifGridItem","import React from 'react'\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data:images , loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map(img =>(\r\n                    <GifGridItem\r\n                         key={ img.id }\r\n                        { ...img }\r\n                    />\r\n                ))}\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import React, {useState} from 'react';\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}